/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alquilerventa;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerListModel;

/**
 *
 * @author alber
 */
public class ModificarPiso extends javax.swing.JFrame {

    /**
     * Creates new form AlquilerVenta
     */
    public ModificarPiso() throws ClassNotFoundException {
        initComponents();
        
        // Centrar pantalla
        this.setLocationRelativeTo(null);
        
        // Poner título
        this.setTitle("Modificar Piso - AlquilerVenta");
        
        // Obtener pisos
        OperacionesBD o = new OperacionesBD();
        ArrayList<String> a = o.obtainPisosList();
        if(a.get(0) != "error") {
            SpinnerListModel listModel = new SpinnerListModel(a);
        
            piso.setModel(listModel);
            piso.setValue(a.get(0));
            
            // Obtener datos primer piso
            ArrayList<Object> ar = o.obtainPiso(a.get(0).split(": ")[0]);
            if(ar.get(0) == "error") {
                JOptionPane.showMessageDialog(rootPane, "No está conectado a la base de datos");

                // Me voy a inicio
                AlquilerVenta av = new AlquilerVenta();
                av.setVisible(true);
                this.dispose();
            }
            else {
                // Domicilio
                domicilio.setText((String) ar.get(0));

                // Inquilino
                ArrayList<String> as = o.obtainClientsList();
                if(!"error".equals(as.get(0))) {
                    as.add("No hay inquilino");
                    listModel = new SpinnerListModel(as);

                    inquilino.setModel(listModel);
                    if(ar.get(1) == null) inquilino.setValue("No hay inquilino");
                    else inquilino.setValue(as.get(Integer.parseInt((String) ar.get(1)) - 1));
                }
                else {
                    listModel = new SpinnerListModel(new String[]{""});
                    inquilino.setModel(listModel);
                }

                ((JSpinner.DefaultEditor) inquilino.getEditor()).getTextField().setEditable(false);

                // Precio/Mes
                precio.setText(String.format("%.2f", ar.get(2)).replace(",", "."));
            }
        }
        else {
            SpinnerListModel listModel = new SpinnerListModel(new String[]{""});
            piso.setModel(listModel);
        }
        
        ((JSpinner.DefaultEditor) piso.getEditor()).getTextField().setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tit_piso = new javax.swing.JLabel();
        btn_modificar = new javax.swing.JButton();
        tit_inquilino = new javax.swing.JLabel();
        tit_precio = new javax.swing.JLabel();
        precio = new javax.swing.JTextField();
        btn_buscar = new javax.swing.JButton();
        piso = new javax.swing.JSpinner();
        domicilio = new javax.swing.JTextField();
        tit_domicilio = new javax.swing.JLabel();
        inquilino = new javax.swing.JSpinner();
        menubar = new javax.swing.JMenuBar();
        ini = new javax.swing.JMenu();
        inicio = new javax.swing.JMenuItem();
        salir = new javax.swing.JMenuItem();
        alquiler = new javax.swing.JMenu();
        registro_consulta_alquiler = new javax.swing.JMenuItem();
        cons_alq = new javax.swing.JMenuItem();
        nuevo_piso = new javax.swing.JMenuItem();
        modificar_piso = new javax.swing.JMenuItem();
        elim_piso = new javax.swing.JMenuItem();
        venta = new javax.swing.JMenu();
        registrar_venta = new javax.swing.JMenuItem();
        consultar_ventas = new javax.swing.JMenuItem();
        nuevo_elemento = new javax.swing.JMenuItem();
        modificar_elemento = new javax.swing.JMenuItem();
        elim_elem = new javax.swing.JMenuItem();
        cliente = new javax.swing.JMenu();
        nuevo_cliente = new javax.swing.JMenuItem();
        modificar_cliente = new javax.swing.JMenuItem();
        elim_cli = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tit_piso.setText("Piso:");

        btn_modificar.setText("Modificar");
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        tit_inquilino.setText("Inquilino:");

        tit_precio.setText("Precio/Mes (en euros):");

        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        tit_domicilio.setText("Domicilio:");

        ini.setText("Inicio");

        inicio.setText("Ir a Inicio");
        inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioActionPerformed(evt);
            }
        });
        ini.add(inicio);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        ini.add(salir);

        menubar.add(ini);

        alquiler.setText("Alquiler");
        alquiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alquilerActionPerformed(evt);
            }
        });

        registro_consulta_alquiler.setText("Registrar Alquiler");
        registro_consulta_alquiler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registro_consulta_alquilerActionPerformed(evt);
            }
        });
        alquiler.add(registro_consulta_alquiler);

        cons_alq.setText("Consultar Alquileres");
        cons_alq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cons_alqActionPerformed(evt);
            }
        });
        alquiler.add(cons_alq);

        nuevo_piso.setText("Añadir Piso");
        nuevo_piso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo_pisoActionPerformed(evt);
            }
        });
        alquiler.add(nuevo_piso);

        modificar_piso.setText("Modificar Piso");
        modificar_piso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_pisoActionPerformed(evt);
            }
        });
        alquiler.add(modificar_piso);

        elim_piso.setText("Eliminar Piso");
        elim_piso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elim_pisoActionPerformed(evt);
            }
        });
        alquiler.add(elim_piso);

        menubar.add(alquiler);

        venta.setText("Venta");

        registrar_venta.setText("Registrar Venta");
        registrar_venta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrar_ventaActionPerformed(evt);
            }
        });
        venta.add(registrar_venta);

        consultar_ventas.setText("Consultar Ventas");
        consultar_ventas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultar_ventasActionPerformed(evt);
            }
        });
        venta.add(consultar_ventas);

        nuevo_elemento.setText("Añadir Elemento");
        nuevo_elemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo_elementoActionPerformed(evt);
            }
        });
        venta.add(nuevo_elemento);

        modificar_elemento.setText("Modificar Elemento");
        modificar_elemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_elementoActionPerformed(evt);
            }
        });
        venta.add(modificar_elemento);

        elim_elem.setText("Eliminar Elemento");
        elim_elem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elim_elemActionPerformed(evt);
            }
        });
        venta.add(elim_elem);

        menubar.add(venta);

        cliente.setText("Cliente");

        nuevo_cliente.setText("Registrar Cliente");
        nuevo_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo_clienteActionPerformed(evt);
            }
        });
        cliente.add(nuevo_cliente);

        modificar_cliente.setText("Modificar Cliente");
        modificar_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificar_clienteActionPerformed(evt);
            }
        });
        cliente.add(modificar_cliente);

        elim_cli.setText("Eliminar Cliente");
        elim_cli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elim_cliActionPerformed(evt);
            }
        });
        cliente.add(elim_cli);

        menubar.add(cliente);

        setJMenuBar(menubar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tit_piso)
                        .addGap(18, 18, 18)
                        .addComponent(piso, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(btn_buscar)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tit_domicilio)
                                    .addComponent(tit_inquilino))
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(domicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tit_precio)
                                .addGap(25, 25, 25)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_modificar)
                                    .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tit_piso)
                            .addComponent(piso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_buscar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tit_domicilio)
                            .addComponent(domicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tit_inquilino)
                            .addComponent(inquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tit_precio))))
                .addGap(26, 26, 26)
                .addComponent(btn_modificar)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        String p = (String) piso.getValue();
        if(p.isEmpty()) JOptionPane.showMessageDialog(rootPane, "No se ha seleccionado ningún piso");
        else {
            OperacionesBD o = new OperacionesBD();
            try {
                ArrayList<Object> a = o.obtainPiso(p.split(": ")[0]);
                if(a.get(0) == "error") JOptionPane.showMessageDialog(rootPane, "No está conectado a la base de datos");
                else {
                    // Domicilio
                    domicilio.setText((String) a.get(0));
                    
                    // Inquilino
                    ArrayList<String> ar = o.obtainClientsList();
                    if(!"error".equals(ar.get(0))) {
                        ar.add("No hay inquilino");
                        SpinnerListModel listModel = new SpinnerListModel(ar);
                        
                        inquilino.setModel(listModel);
                        if(a.get(1) == null) inquilino.setValue("No hay inquilino");
                        else inquilino.setValue(ar.get(Integer.parseInt((String) a.get(1)) - 1));
                    }
                    else {
                        SpinnerListModel listModel = new SpinnerListModel(new String[]{""});
                        inquilino.setModel(listModel);
                    }

                    ((JSpinner.DefaultEditor) inquilino.getEditor()).getTextField().setEditable(false);
                    
                    // Precio/Mes
                    precio.setText(String.format("%.2f", a.get(2)).replace(",", "."));
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ModificarPiso.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        String dom = domicilio.getText();
        if(!dom.isEmpty()) {
            String prec = precio.getText();
            if(prec.matches("[0-9]+[.][0-9]+") || prec.matches("[0-9]+[,][0-9]+") || prec.matches("[0-9]+")) {
                String inq = (String) inquilino.getValue();
                if(!inq.isEmpty()) {
                    OperacionesBD o = new OperacionesBD();
                    try {
                        if("error".equals(o.updatePiso(((String) piso.getValue()).split(": ")[0], dom, inq.split(": ")[0], prec.replace(",", ".")))) JOptionPane.showMessageDialog(rootPane,"No está conectado a la base de datos");
                        else {
                            JOptionPane.showMessageDialog(rootPane,"El piso se ha modificado con éxito");

                            // Me voy a inicio
                            AlquilerVenta av = new AlquilerVenta();
                            av.setVisible(true);
                            this.dispose();
                        }
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(NuevoPiso.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(ModificarPiso.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else JOptionPane.showMessageDialog(rootPane, "No se ha introducido el inquilino");
            }
            else JOptionPane.showMessageDialog(rootPane, "No se ha introducido el precio mensual del alquiler que se debe "
                + "escribir de la siguiente manera: por ejemplo, 135 ó 135.46");
        }
        else JOptionPane.showMessageDialog(rootPane, "El domicilio no está introducido");
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void inicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioActionPerformed
        AlquilerVenta a = new AlquilerVenta();
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_inicioActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void registro_consulta_alquilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registro_consulta_alquilerActionPerformed
        ResConAlquiler r = null;
        try {
            r = new ResConAlquiler();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        r.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_registro_consulta_alquilerActionPerformed

    private void cons_alqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cons_alqActionPerformed
        ConsultarAlquileres ca = null;
        try {
            ca = new ConsultarAlquileres();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        ca.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_cons_alqActionPerformed

    private void nuevo_pisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo_pisoActionPerformed
        NuevoPiso n = null;
        try {
            n = new NuevoPiso();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        n.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_nuevo_pisoActionPerformed

    private void modificar_pisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar_pisoActionPerformed
        ModificarPiso m = null;
        try {
            m = new ModificarPiso();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_modificar_pisoActionPerformed

    private void elim_pisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elim_pisoActionPerformed
        EliminarPiso e = null;
        try {
            e = new EliminarPiso();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        e.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_elim_pisoActionPerformed

    private void alquilerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alquilerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alquilerActionPerformed

    private void registrar_ventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrar_ventaActionPerformed
        RegistrarVenta r = null;
        try {
            r = new RegistrarVenta();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        r.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_registrar_ventaActionPerformed

    private void consultar_ventasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultar_ventasActionPerformed
        ConsultarVentas c = null;
        try {
            c = new ConsultarVentas();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        c.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_consultar_ventasActionPerformed

    private void nuevo_elementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo_elementoActionPerformed
        NuevoElemento n = new NuevoElemento();
        n.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_nuevo_elementoActionPerformed

    private void modificar_elementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar_elementoActionPerformed
        ModificarElemento m = null;
        try {
            m = new ModificarElemento();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_modificar_elementoActionPerformed

    private void elim_elemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elim_elemActionPerformed
        EliminarElemento e = null;
        try {
            e = new EliminarElemento();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        e.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_elim_elemActionPerformed

    private void nuevo_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo_clienteActionPerformed
        RegistrarCliente r = new RegistrarCliente();
        r.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_nuevo_clienteActionPerformed

    private void modificar_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar_clienteActionPerformed
        ModificarCliente m = null;
        try {
            m = new ModificarCliente();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_modificar_clienteActionPerformed

    private void elim_cliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elim_cliActionPerformed
        EliminarCliente e = null;
        try {
            e = new EliminarCliente();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AlquilerVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        e.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_elim_cliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarPiso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarPiso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarPiso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarPiso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ModificarPiso().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ModificarPiso.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu alquiler;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JMenu cliente;
    private javax.swing.JMenuItem cons_alq;
    private javax.swing.JMenuItem consultar_ventas;
    private javax.swing.JTextField domicilio;
    private javax.swing.JMenuItem elim_cli;
    private javax.swing.JMenuItem elim_elem;
    private javax.swing.JMenuItem elim_piso;
    private javax.swing.JMenu ini;
    private javax.swing.JMenuItem inicio;
    private javax.swing.JSpinner inquilino;
    private javax.swing.JMenuBar menubar;
    private javax.swing.JMenuItem modificar_cliente;
    private javax.swing.JMenuItem modificar_elemento;
    private javax.swing.JMenuItem modificar_piso;
    private javax.swing.JMenuItem nuevo_cliente;
    private javax.swing.JMenuItem nuevo_elemento;
    private javax.swing.JMenuItem nuevo_piso;
    private javax.swing.JSpinner piso;
    private javax.swing.JTextField precio;
    private javax.swing.JMenuItem registrar_venta;
    private javax.swing.JMenuItem registro_consulta_alquiler;
    private javax.swing.JMenuItem salir;
    private javax.swing.JLabel tit_domicilio;
    private javax.swing.JLabel tit_inquilino;
    private javax.swing.JLabel tit_piso;
    private javax.swing.JLabel tit_precio;
    private javax.swing.JMenu venta;
    // End of variables declaration//GEN-END:variables
}
